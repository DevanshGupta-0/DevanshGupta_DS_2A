//Insertion
#include<stdio.h>
void main(){
int a[100],i,num,l;
printf("Length: ");
scanf("%d",&l);
printf("Elements in sorted manner:\n");
for(i=0; i<l; i++){
  scanf("%d",&a[i]);
}
printf("Your Entered array is: \n");
for(i=0; i<l; i++)
 printf("%d ",a[i]);
printf("\nEnter the element to be inserted: ");
scanf("%d",&num);
i = l-1;
while(i >= 0 && num<a[i]){
  a[i+1] = a[i];
  i--;
}
a[i+1] = num;
printf("The array after insertion becomes: \n");
for(i=0; i<l+1; i++)
 printf("%d ",a[i]);


}

//Deletion
#include<stdio.h>
void main(){
int a[100],i,num,l;
printf("Length: ");
scanf("%d",&l);
printf("Elements:\n");
for(i=0; i<l; i++){
  scanf("%d",&a[i]);
}
printf("Your Entered array is: \n");
for(i=0; i<l; i++)
 printf("%d ",a[i]);
printf("\nEnter the element to delete: ");
scanf("%d",&num);

for(i=0; i<l; i++)
{
  if(a[i]==num){
    break;
  }
}
while(i<l-1){
  a[i] = a[i+1];
  i++;
}
printf("Array After Deletion is: \n");
for(i=0; i<l-1; i++)
 printf("%d ",a[i]);

}

//Repetition
#include<stdio.h>
void main(){
int a[100],i,num,l,n=0,j,flag;
printf("Length: ");
scanf("%d",&l);
printf("Elements:\n");
for(i=0; i<l; i++){
  scanf("%d",&a[i]);
}
printf("Your Entered array is: \n");
for(i=0; i<l; i++)
 printf("%d ",a[i]);
for(i=0; i<l; i++){
    n=0;
    flag = 0;
    for(int k = i-1; k>=0; k--){
    if(a[i]==a[k]){ //to not Recount for a similar element
        flag = 1;
        break;
     }
    }
    if(flag == 0){
    for(j=0; j<l; j++){
        if(a[i]==a[j]){
            n++;
        }
    }
    if(n>1){
        printf("\nElement %d is repeated %d times",a[i],n-1);
    }
    else{
        printf("\nThe element %d is not repeated",a[i]);
    }
    }
}
}


#include<stdio.h>
void main(){
 int a[100],i,l,sm,lg,n;
 printf("Length: ");
 scanf("%d",&l);
 printf("Elements:\n");
 for(i=0; i<l; i++){
  scanf("%d",&a[i]);
 }
 printf("Your Entered array is: \n");
 for(i=0; i<l; i++)
  printf("%d ",a[i]);
 sm = a[0];
 for(i = 0; i<l; i++){
  if(a[i]<sm){
      sm = a[i];
  }
 }
 lg = a[0];
 for(i = 0; i<l; i++){
  if(a[i]>lg){
      lg = a[i];
  }
 }
 //Finding the Missing Elements
 while(sm<=lg){
     n =0;
     for(i = 0; i<l; i++){
      if(sm == a[i]){
         n = 1;
      }
     }
     if(n!=1){
         printf("\nThe Number %d is missing",sm);
     }
     sm++;
 }
}

Array Q8-

import java.util.*;
public class Main {
    public static void main(String[] args) {
        int[] a1 = {1,3,5,7,9,11};
        int[] a2 = {2,4,6,8,10};
        mergeArray(a1,a2);
    }

    public static void mergeArray(int[] arr , int[] arr2){
        int i = 0, j = 0, x = 0;
        int[] arr3 = new int[100];
        while (i<arr.length && j<arr2.length){
            if(arr[i] < arr2[j]){
                arr3[x++] = arr[i++];
            }
            else{
                arr3[x++] = arr2[j++];
            }
        }
        //Bache hue elements array ke add krenge ab
        while (i < arr.length){
            arr3[x++]  = arr[i++];
        }
        while (j < arr2.length){
            arr3[x++]  = arr2[j++];
        }
        System.out.print("The Merged Array is: ");
        for(i = 0; i<x; i++){
            System.out.print(arr3[i]+" ");
        }
    }
}

Array Q9-

public class Main {
    public static void main(String[] args) {
        int[] a1 = {1,2,6,7,9,11,1,2,3};
        int[] a2 = {2,4,6,8,10};
        unionSet(a1,a2);
    }

    public static void unionSet(int[] arr , int[] arr2){
        int i,j, x = 0;
        int[] arr3 = new int[100];
        for(i = 0; i<arr.length; i++){
            for( j = 0; j<x; j++) {
                if (arr3[j] == arr[i])
                    break;
            }
            if(j == x)
                arr3[x++] = arr[i];
        }
        for(i = 0; i<arr2.length; i++){
            for( j = 0; j<x; j++) {
                if (arr3[j] == arr2[i])
                    break;
            }
            if(j == x)
                arr3[x++] = arr2[i];
        }
        System.out.print("The Union is: ");
        for(i = 0; i<x; i++){
            System.out.print(arr3[i]+" ");
        }
    }
}

Array Q10-

import java.util.*;
public class Main {
    public static void main(String[] args) {
        int[] a1 = {1,2,3,4,5,3};
        int[] a2 = {3,4,5,6,7,8,4,3};
        intersectionSet(a1,a2);
    }

    public static void intersectionSet(int[] arr , int[] arr2){
        int i,j, x = 0;
        int[] arr3 = new int[100];
        for(i = 0; i<arr.length; i++){
            for(int k = 0; k<arr2.length; k++) {
                if(arr[i] == arr2[k]) {
                    for (j = 0; j < x; j++) {
                        if (arr3[j] == arr[i])
                            break;
                    }
                    if (j == x)
                        arr3[x++] = arr[i];
                }
            }
        }
        System.out.print("The Intersection is: ");
        for(i = 0; i<x; i++){
            System.out.print(arr3[i]+" ");
        }
    }
}

Array Q11-

public class Main {
    public static void main(String[] args) {
        int[] a1 = {1,2,3,4,5,4,5,1,2};
        int[] a2 = {1,2,3,6,7,8,9};
        diffSet(a1,a2);
    }

    public static void diffSet(int[] arr , int[] arr2){
        int i,j, x = 0;
        int[] arr3 = new int[100];
        for(i = 0; i<arr.length; i++){
            for(j = 0; j<arr2.length; j++){
                if(arr[i] == arr2[j])
                    break;
            }
            if (j == arr2.length){
                int k;
                for(k = 0; k<x; k++){
                    if(arr[i] == arr3[k])
                        break;
                }
                if (k == x)
                    arr3[x++] = arr[i];
            }

        }
        System.out.print("Set 1 - Set 2 is: ");
        for(i = 0; i<x; i++){
            System.out.print(arr3[i]+" ");
        }
    }
}

Array Q12-

import java.util.*;
public class Main {
    public static void main(String[] args) {
        int[] a1 = {1,2,3,4,5,2,1,5,8};
        int[] a2 = {3,4,5,6,7,3,4};
        symmetricDiffSet(a1,a2);
    }

    public static void symmetricDiffSet(int[] arr , int[] arr2){
        int i,j, x = 0;
        int[] arr3 = new int[100];
        for(i = 0; i<arr.length; i++){
            for(j = 0; j<arr2.length; j++){
                if(arr[i] == arr2[j])
                    break;
            }
            if(j == arr2.length){
                int k;
                for(k = 0; k<x; k++){
                    if (arr[i] == arr3[k])
                        break;
                }
                if (k == x)
                    arr3[x++] = arr[i];
            }
        }
        for(i = 0; i<arr2.length; i++){
            for(j = 0; j<arr.length; j++){
                if(arr2[i] == arr[j])
                    break;
            }
            if(j == arr.length){
                int k;
                for(k = 0; k<x; k++){
                    if (arr2[i] == arr3[k])
                        break;
                }
                if (k == x)
                    arr3[x++] = arr2[i];
            }
        }
        System.out.print("Set Symmetric Difference is: ");
        for(i = 0; i<x; i++){
            System.out.print(arr3[i]+" ");
        }
    }
}

Array Q13-




Array Q16 -

import java.util.*;
public class Main {
    public static void main(String[] args) {
        int [][] a = new int[100][100];
        int [][] b = new int[100][100];
        System.out.print("Rows & Columns for Mat.A: ");
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int n = sc.nextInt();
        System.out.println("Enter the elements of Mat.A: ");
        for(int i = 0; i<m; i++){
            for (int j = 0; j<n; j++){
                 a[i][j] = sc.nextInt();
            }
        }
        System.out.print("Rows & Columns for Mat.B: ");
        int p = sc.nextInt();
        int q = sc.nextInt();
        if(m != p || n != q){
            System.out.print("Matrix Addition Not Possible");
        }
        else {
            System.out.println("Enter the elements of Mat.A: ");
            for(int i = 0; i<m; i++){
                for (int j = 0; j<n; j++){
                    b[i][j] = sc.nextInt();
                }
            }
            matrixAddition(a,m,n,b,p,q);
        }
    }

    public static void matrixAddition(int[][] a,int m, int n, int[][] b, int p, int q){
       //Code for Addition
        int[][] c = new int[100][100];
        System.out.println("The Matrix Addition is: ");
        for(int i = 0; i<m; i++){
            for (int j = 0; j<n; j++){
                c[i][j] = a[i][j] + b[i][j];
                System.out.print(c[i][j] + " ");
            }
            System.out.println();
        }
    }
}

Array Q17-

import java.util.*;
public class Main {
    public static void main(String[] args) {
        int [][] a = new int[100][100];
        int [][] b = new int[100][100];
        System.out.print("Rows & Columns for Mat.A: ");
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int n = sc.nextInt();
        System.out.println("Enter the elements of Mat.A: ");
        for(int i = 0; i<m; i++){
            for (int j = 0; j<n; j++){
                 a[i][j] = sc.nextInt();
            }
        }
        System.out.print("Rows & Columns for Mat.B: ");
        int p = sc.nextInt();
        int q = sc.nextInt();
        if(m != p || n != q){
            System.out.print("Matrix Subtraction Not Possible");
        }
        else {
            System.out.println("Enter the elements of Mat.A: ");
            for(int i = 0; i<m; i++){
                for (int j = 0; j<n; j++){
                    b[i][j] = sc.nextInt();
                }
            }
            matrixSubtraction(a,m,n,b,p,q);
        }
    }

    public static void matrixSubtraction(int[][] a,int m, int n, int[][] b, int p, int q){
       //Code for Subtraction
        int[][] c = new int[100][100];
        System.out.println("The Matrix Subtraction is: ");
        for(int i = 0; i<m; i++){
            for (int j = 0; j<n; j++){
                c[i][j] = a[i][j] - b[i][j];
                System.out.print(c[i][j] + " ");
            }
            System.out.println();
        }
    }
}

Array Q18-

import java.util.*;
public class Main {
    public static void main(String[] args) {
        int [][] a = new int[100][100];
        int [][] b = new int[100][100];
        System.out.print("Rows & Columns for Mat.A: ");
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int n = sc.nextInt();
        System.out.println("Enter the elements of Mat.A: ");
        for(int i = 0; i<m; i++){
            for (int j = 0; j<n; j++){
                 a[i][j] = sc.nextInt();
            }
        }
        System.out.print("Rows & Columns for Mat.B: ");
        int p = sc.nextInt();
        int q = sc.nextInt();
        if(n != p ){
            System.out.print("Matrix Multiplication Not Possible");
        }
        else {
            System.out.println("Enter the elements of Mat.A: ");
            for(int i = 0; i<m; i++){
                for (int j = 0; j<n; j++){
                    b[i][j] = sc.nextInt();
                }
            }
            matrixMultiplication(a,m,n,b,p,q);
        }
    }

    public static void matrixMultiplication(int[][] a,int m, int n, int[][] b, int p, int q){
       //Code for Multiplication
        int[][] c = new int[100][100];
        System.out.println("The Matrix Multiplication is: ");
        for(int i = 0; i<m; i++){
            for (int j = 0; j<q; j++){
                c[i][j] = 0;
                for(int k = 0; k<n; k++)
                    c[i][j] = c[i][j] + (a[i][k] * b[k][j]);

                System.out.print(c[i][j] + " ");
            }
            System.out.println();
        }
    }
}

Array Q19-

import java.util.*;
public class Main {
    public static void main(String[] args) {
        int [][] a = new int[100][100];
        System.out.print("Rows & Columns for Mat.A: ");
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int n = sc.nextInt();
        System.out.println("Enter the elements of Mat.A: ");
        for(int i = 0; i<m; i++){
            for (int j = 0; j<n; j++){
                 a[i][j] = sc.nextInt();
            }
        }
        matrixTranspose(a,m,n);

    }

    public static void matrixTranspose(int[][] a,int m, int n){
        int[][] b = new int[100][100];
        for(int i = 0; i<m; i++){
            for (int j = 0; j<n; j++){
                b[j][i] = a[i][j];
            }
        }
        System.out.println("The Transpose is: ");
        for(int i = 0; i<n; i++){
            for (int j = 0; j<m; j++){
                System.out.print(b[i][j]+" ");
            }
            System.out.println();
        }
    }
}

Searching Q1-

import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] a = new int[100];
        System.out.print("Enter the number of elements: ");
        int n = sc.nextInt();
        System.out.print("Enter Elements: ");
        for(int i = 0; i<n; i++){
            a[i] = sc.nextInt();
        }
        System.out.print("Enter the number to search: ");
        int num = sc.nextInt();
        linearSearch(a,n,num);
    }
    static void linearSearch(int[] arr, int n, int num){
        int i, flag = 0;
        for(i = 0; i<n; i++)
             if(num == arr[i]) {
                 System.out.println("Element Found at index " + i);
                 flag = 1;
             }
        if(flag==0)
            System.out.print("Element not found");

    }
}
 
Searching Q2-

import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] a = new int[100];
        System.out.print("Enter the number of elements: ");
        int n = sc.nextInt();
        System.out.print("Enter Elements: ");
        for(int i = 0; i<n; i++){
            a[i] = sc.nextInt();
        }
        System.out.print("Enter the number to search: ");
        int num = sc.nextInt();
        binarySearch(a,n,num);
    }
    static void binarySearch(int[] arr, int n, int num){
        int i, flag = 0;
        int si = 0, ei = n-1, mid = si + (ei-si)/2;
        while (si <= ei){
            if(num<arr[mid])
                ei = mid-1;
            else if(num == arr[mid]) {
                System.out.println("Element "+ num + " found at index "+ mid );
                flag = 1;
                break;
            }
            else
                si = mid + 1;
            mid = si + (ei-si)/2;
        }
        if(flag == 0)
            System.out.println("Element not Found");

    }
}

Searching Q3 -

import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] a = new int[100];
        System.out.print("Enter the number of elements: ");
        int n = sc.nextInt();
        System.out.print("Enter Elements: ");
        for(int i = 0; i<n; i++){
            a[i] = sc.nextInt();
        }
        System.out.print("Enter the number to search: ");
        int num = sc.nextInt();
        ternarySearch(a,n,num);
    }
    static void ternarySearch(int[] arr, int n, int num){
        int i, flag = 0;
        int si = 0, ei = n-1, mid1 = si + (ei-si)/3, mid2 = ei - (ei-si)/3;
        while (si <= ei){
            if(num<arr[mid1])
                ei = mid1-1;
            else if(num == arr[mid1]) {
                System.out.println("Element "+ num + " found at index "+ mid1 );
                flag = 1;
                break;
            }
            else if(num == arr[mid2]){
                System.out.println("Element "+ num + " found at index "+ mid2 );
                flag = 1;
                break;
            }
            else if(num>arr[mid2])
                si = mid2 + 1;
            else {
                si = mid1 + 1;
                ei = mid2 - 1;
            }
            mid1 = si + (ei-si)/3;
            mid2 = ei - (ei-si)/3;
        }
        if(flag == 0)
            System.out.println("Element not Found");

    }
}

Searching Q4-

import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] a = new int[100];
        System.out.print("Enter the number of elements: ");
        int n = sc.nextInt();
        System.out.print("Enter Elements: ");
        for(int i = 0; i<n; i++){
            a[i] = sc.nextInt();
        }
        System.out.print("Enter the number to search: ");
        int num = sc.nextInt();
        jumpSearch(a,n,num);
    }
    static void jumpSearch(int[] arr, int n, int num){
        //only works for Sorted Arrays
        int i;
        int si = 0, m = (int)Math.sqrt(n), copy = m;
          while(true){
                if(num > arr[si] && num >= arr[m]){
                    m = m + copy;
                    si = si + copy;
                    if(m >= n){
                        for(i = si; i<n; i++){
                            if(num == arr[i]) {
                                System.out.println("Element found at index " + i);
                                break;
                            }
                        }
                        if(i == m) {
                            System.out.print("Element not found");
                            break;
                        }
                        break;
                    }
                }
                else{
                    for(i = si; i<m; i++){
                        if(num == arr[i]) {
                            System.out.println("Element found at index " + i);
                            break;
                        }
                    }
                    if(i == m) {
                        System.out.print("Element not found");
                        break;
                    }
                    break;

                }
          }

    }
}


